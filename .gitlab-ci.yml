services:
  - docker:dind

stages:
  - test
  - build
  - deploy

variables:
   EC2_HOST: "18.223.126.146"
  #EC2_HOST: "13.58.174.0"

tests:
  image: python:3-bullseye
  stage: test
  script:
    - cd api
    - pip install -r requirements.txt
    - python -m pytest

build-api-image:
    stage: build
    image: docker:git
    needs:
        - tests
    variables:
        GITLAB_IMAGE: ${CI_REGISTRY_IMAGE}/api
    before_script:
        - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    script:
        - docker build --tag $GITLAB_IMAGE:latest ./api
        - docker push $GITLAB_IMAGE:latest
    only:
        - main

build-front-end-job:
  stage: build
  image: node:lts-bullseye
  needs:
    - tests
  script:
    - cd ghi
    - npm install
    - npm run lint
    - VITE_API_HOST="" npm run build -- --base=/demodeployment/
  artifacts:
    paths:
      - ghi/dist/

pages:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/dist/ public
  artifacts:
    paths:
      - public
  variables:
    GITLAB_PAGES_HTTP: "true"

deploy-to-ec2:
  stage: deploy
  image: docker:20.10.11  # Use an image with Docker pre-installed
  variables:
    GITLAB_IMAGE: ${CI_REGISTRY_IMAGE}/api
    DATABASE_URL: "postgresql://postgres:password2@databaseattempt.cnwceg2auzrh.us-east-2.rds.amazonaws.com/demo_deploy"
   #DATABASE_URL: "postgresql://$PG_USER:$PG_PASSWORD@demo.cnwceg2auzrh.us-east-2.rds.amazonaws.com/deploy_demo"
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - || (echo "Failed to add SSH key" && exit 1)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "StrictHostKeyChecking no" > ~/.ssh/config
    - ssh-keyscan $EC2_HOST >> ~/.ssh/known_hosts || (echo "Failed to ssh-keyscan" && exit 1)
  script:
    - echo "$GITLAB_IMAGE" || (echo "Failed to output" && exit 1)
    - echo "$GITLAB_IMAGE:latest" || (echo "Failed to output" && exit 1)
    - echo "$DATABASE_URL" || (echo "Failed to output" && exit 1)
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin || (echo "Failed to login to Docker registry" && exit 1)
    - ssh -v ubuntu@$EC2_HOST "docker pull $GITLAB_IMAGE:latest" || (echo "Failed to pull Docker image" && exit 1)
    - ssh -v ubuntu@$EC2_HOST "docker stop my-api || true && docker rm my-api || true" || (echo "Failed to stop and remove container" && exit 1)
    - ssh -v ubuntu@$EC2_HOST "docker run -d --name my-api -e DATABASE_URL=$DATABASE_URL -p 80:80 $GITLAB_IMAGE" || (echo "Failed to run Docker container" && exit 1)
  only:
    - main
